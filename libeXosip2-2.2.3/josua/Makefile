# Makefile.in generated by automake 1.9.6 from Makefile.am.
# josua/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





srcdir = .
top_srcdir = ..

pkgdatadir = $(datadir)/libeXosip2
pkglibdir = $(libdir)/libeXosip2
pkgincludedir = $(includedir)/libeXosip2
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i386-apple-darwin8.10.1
host_triplet = i386-apple-darwin8.10.1
#bin_PROGRAMS = josua$(EXEEXT)
subdir = josua
DIST_COMMON = README $(libjosua_la_include_HEADERS) \
	$(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/scripts/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(libjosua_la_includedir)"
libLTLIBRARIES_INSTALL = $(INSTALL)
LTLIBRARIES = $(lib_LTLIBRARIES)
am__DEPENDENCIES_1 =
libjosua_la_DEPENDENCIES = $(top_builddir)/src/libeXosip2.la \
	$(libdir)/libosip2.la $(libdir)/libosipparser2.la \
	$(am__DEPENDENCIES_1)
am_libjosua_la_OBJECTS = commands.lo jinsubscriptions.lo \
	jsubscriptions.lo jcalls.lo jconfig.lo pplgetopt.lo \
	sound-mediastreamer.lo sound-ortp.lo sound-ucl.lo \
	sound-win32.lo sound_conv.lo sound-mac.lo jfriends.lo \
	jidentity.lo sdptools.lo
libjosua_la_OBJECTS = $(am_libjosua_la_OBJECTS)
#am_libjosua_la_rpath = -rpath $(libdir)
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am_josua_OBJECTS = gui_new_identity.$(OBJEXT) gui.$(OBJEXT) \
	gui_online.$(OBJEXT) gui_address_book_browse.$(OBJEXT) \
	gui_registrations_list.$(OBJEXT) main_ncurses.$(OBJEXT) \
	gui_address_book_newentry.$(OBJEXT) \
	gui_sessions_list.$(OBJEXT) gui_icon.$(OBJEXT) \
	gui_setup.$(OBJEXT) gui_insubscriptions_list.$(OBJEXT) \
	gui_subscriptions_list.$(OBJEXT) gui_loglines.$(OBJEXT) \
	gui_topline.$(OBJEXT) gui_menu.$(OBJEXT) \
	gui_new_call.$(OBJEXT)
josua_OBJECTS = $(am_josua_OBJECTS)
josua_DEPENDENCIES = $(top_builddir)/src/libeXosip2.la libjosua.la \
	$(libdir)/libosip2.la $(libdir)/libosipparser2.la \
	$(am__DEPENDENCIES_1)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/scripts/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libjosua_la_SOURCES) $(josua_SOURCES)
DIST_SOURCES = $(libjosua_la_SOURCES) $(josua_SOURCES)
libjosua_la_includeHEADERS_INSTALL = $(INSTALL_HEADER)
HEADERS = $(libjosua_la_include_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /Users/danielbraun/devel/sipx/libeXosip2-2.2.3/scripts/missing --run aclocal-1.9 -I scripts
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /Users/danielbraun/devel/sipx/libeXosip2-2.2.3/scripts/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /Users/danielbraun/devel/sipx/libeXosip2-2.2.3/scripts/missing --run autoconf
AUTOHEADER = ${SHELL} /Users/danielbraun/devel/sipx/libeXosip2-2.2.3/scripts/missing --run autoheader
AUTOMAKE = ${SHELL} /Users/danielbraun/devel/sipx/libeXosip2-2.2.3/scripts/missing --run automake-1.9
AWK = awk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g 
COMPILE_JOSUA_FALSE = 
COMPILE_JOSUA_TRUE = #
COMPILE_TOOLS_FALSE = #
COMPILE_TOOLS_TRUE = 
CPP = gcc -E
CPPFLAGS =  -Wall -Wcast-align -Wchar-subscripts -Wformat -Winline -Wmissing-declarations -Wmissing-prototypes -Wnested-externs -Wpointer-arith
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = grep -E
EXEEXT = 
EXOSIP_FLAGS =  -DOSIP_MT -pedantic -DENABLE_DEBUG -g -DENABLE_TRACE
EXOSIP_LIB = 
EXOSIP_VERSION = 2.2.3
F77 = 
FFLAGS = 
GLIB_SUPPORT_FALSE = #
GLIB_SUPPORT_TRUE = 
INSIDE_GNOME_COMMON_FALSE = 
INSIDE_GNOME_COMMON_TRUE = #
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
JOSUA_FLAGS = -DOSIP_AT_OSIP_DOT_ORG
JOSUA_LIB = 
LDFLAGS = 
LIBEXOSIP_SO_VERSION = 5:0:0
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /Users/danielbraun/devel/sipx/libeXosip2-2.2.3/scripts/missing --run makeinfo
MEDIASTREAMER_SUPPORT_FALSE = 
MEDIASTREAMER_SUPPORT_TRUE = #
OBJEXT = o
ORTP_SUPPORT_FALSE = 
ORTP_SUPPORT_TRUE = #
PACKAGE = libeXosip2
PACKAGE_BUGREPORT = 
PACKAGE_NAME = 
PACKAGE_STRING = 
PACKAGE_TARNAME = 
PACKAGE_VERSION = 
PATH_SEPARATOR = :
PTHREAD_CC = gcc
PTHREAD_CFLAGS = 
PTHREAD_LIBS = 
RANLIB = ranlib
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
UCL_SUPPORT_FALSE = 
UCL_SUPPORT_TRUE = #
VERSION = 2.2.3
ac_aux_dir = scripts
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_F77 = 
ac_ct_RANLIB = ranlib
ac_ct_STRIP = strip
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = i386-apple-darwin8.10.1
build_alias = 
build_cpu = i386
build_os = darwin8.10.1
build_vendor = apple
datadir = ${prefix}/share
exec_prefix = ${prefix}
host = i386-apple-darwin8.10.1
host_alias = 
host_cpu = i386
host_os = darwin8.10.1
host_vendor = apple
includedir = ${prefix}/include
infodir = ${prefix}/info
install_sh = /Users/danielbraun/devel/sipx/libeXosip2-2.2.3/scripts/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localstatedir = ${prefix}/var
mandir = ${prefix}/man
mkdir_p = $(mkinstalldirs)
oldincludedir = /usr/include
prefix = /tmp/stage
program_transform_name = s,x,x,
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target_alias = 
#lib_LTLIBRARIES = libjosua.la
#MORE_CFLAGS = -g   -DOSIP_AT_OSIP_DOT_ORG  -DOSIP_MT -pedantic -DENABLE_DEBUG -g -DENABLE_TRACE
MORE_CFLAGS = -g   -DOSIP_AT_OSIP_DOT_ORG  -DOSIP_MT -pedantic -DENABLE_DEBUG -g -DENABLE_TRACE `pkg-config --cflags glib-2.0`
#AM_CFLAGS = $(MORE_CFLAGS) -DMEDIASTREAMER_SUPPORT
#AM_CFLAGS = $(MORE_CFLAGS) -DORTP_SUPPORT
#AM_CFLAGS = $(MORE_CFLAGS) -DUCL_SUPPORT
josua_SOURCES = \
gui_new_identity.c       \
gui.c                       gui_online.c             \
gui_address_book_browse.c   gui_registrations_list.c main_ncurses.c         \
gui_address_book_newentry.c gui_sessions_list.c                 \
gui_icon.c                  gui_setup.c              \
gui_insubscriptions_list.c  gui_subscriptions_list.c \
gui_loglines.c              gui_topline.c            \
gui_menu.c                  \
gui_new_call.c              \
gui_menu.h                  gui_subscriptions_list.h \
gui.h                       gui_new_call.h           gui_topline.h          \
gui_address_book_browse.h   gui_new_identity.h       \
gui_address_book_newentry.h gui_online.h             \
gui_icon.h                  gui_registrations_list.h \
gui_insubscriptions_list.h  gui_sessions_list.h      \
gui_loglines.h              gui_setup.h 

libjosua_la_SOURCES = \
commands.c	jinsubscriptions.c jsubscriptions.c       \
jcalls.c        jconfig.c          commands.h       jcalls.h \
jconfig.h       jinsubscriptions.h jsubscriptions.h ppl_getopt.h pplgetopt.c   \
sound-mediastreamer.c sound-ortp.c sound-ucl.c      sound-win32.c  \
sound_conv.c    sound-mac.c \
jfriends.h      jfriends.c  \
jidentity.h     jidentity.c \
sdptools.h      sdptools.c

libjosua_la_includedir = $(includedir)/josua
libjosua_la_include_HEADERS = jmainconfig.h
#josua_LDFLAGS = -O    
josua_LDFLAGS = -O     `pkg-config --libs glib-2.0`
#MORE_MYADD = -lortp -lm -lmediastreamer -lmsspeex
#MORE_MYADD = -L$(libdir) -lortp -lm
#MORE_MYADD = -L$(libdir) -luclmmbase
#MORE_INCLUDES = -I$(includedir)/mediastreamer -I$(includedir)/ortp
#MORE_INCLUDES = -I$(includedir)/ortp
#MORE_INCLUDES = -I/ucl
josua_LDADD = $(top_builddir)/src/libeXosip2.la libjosua.la $(libdir)/libosip2.la $(libdir)/libosipparser2.la -lrt $(MORE_MYADD)
INCLUDES = -I$(top_srcdir) -I$(top_srcdir)/include -I$(includedir) $(MORE_INCLUDES)
libjosua_la_LIBADD = $(top_builddir)/src/libeXosip2.la $(libdir)/libosip2.la $(libdir)/libosipparser2.la  $(MORE_MYADD)
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  josua/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  josua/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(mkdir_p) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@set -x; list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " $(LIBTOOL) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  $(LIBTOOL) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libjosua.la: $(libjosua_la_OBJECTS) $(libjosua_la_DEPENDENCIES) 
	$(LINK) $(am_libjosua_la_rpath) $(libjosua_la_LDFLAGS) $(libjosua_la_OBJECTS) $(libjosua_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(mkdir_p) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
josua$(EXEEXT): $(josua_OBJECTS) $(josua_DEPENDENCIES) 
	@rm -f josua$(EXEEXT)
	$(LINK) $(josua_LDFLAGS) $(josua_OBJECTS) $(josua_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/commands.Plo
include ./$(DEPDIR)/gui.Po
include ./$(DEPDIR)/gui_address_book_browse.Po
include ./$(DEPDIR)/gui_address_book_newentry.Po
include ./$(DEPDIR)/gui_icon.Po
include ./$(DEPDIR)/gui_insubscriptions_list.Po
include ./$(DEPDIR)/gui_loglines.Po
include ./$(DEPDIR)/gui_menu.Po
include ./$(DEPDIR)/gui_new_call.Po
include ./$(DEPDIR)/gui_new_identity.Po
include ./$(DEPDIR)/gui_online.Po
include ./$(DEPDIR)/gui_registrations_list.Po
include ./$(DEPDIR)/gui_sessions_list.Po
include ./$(DEPDIR)/gui_setup.Po
include ./$(DEPDIR)/gui_subscriptions_list.Po
include ./$(DEPDIR)/gui_topline.Po
include ./$(DEPDIR)/jcalls.Plo
include ./$(DEPDIR)/jconfig.Plo
include ./$(DEPDIR)/jfriends.Plo
include ./$(DEPDIR)/jidentity.Plo
include ./$(DEPDIR)/jinsubscriptions.Plo
include ./$(DEPDIR)/jsubscriptions.Plo
include ./$(DEPDIR)/main_ncurses.Po
include ./$(DEPDIR)/pplgetopt.Plo
include ./$(DEPDIR)/sdptools.Plo
include ./$(DEPDIR)/sound-mac.Plo
include ./$(DEPDIR)/sound-mediastreamer.Plo
include ./$(DEPDIR)/sound-ortp.Plo
include ./$(DEPDIR)/sound-ucl.Plo
include ./$(DEPDIR)/sound-win32.Plo
include ./$(DEPDIR)/sound_conv.Plo

.c.o:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	if $(LTCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:
install-libjosua_la_includeHEADERS: $(libjosua_la_include_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(libjosua_la_includedir)" || $(mkdir_p) "$(DESTDIR)$(libjosua_la_includedir)"
	@list='$(libjosua_la_include_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(libjosua_la_includeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(libjosua_la_includedir)/$$f'"; \
	  $(libjosua_la_includeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(libjosua_la_includedir)/$$f"; \
	done

uninstall-libjosua_la_includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(libjosua_la_include_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(libjosua_la_includedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(libjosua_la_includedir)/$$f"; \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(HEADERS)
install-binPROGRAMS: install-libLTLIBRARIES

installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(libjosua_la_includedir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-libjosua_la_includeHEADERS

install-exec-am: install-binPROGRAMS install-libLTLIBRARIES

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-info-am \
	uninstall-libLTLIBRARIES uninstall-libjosua_la_includeHEADERS

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libLTLIBRARIES clean-libtool ctags \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-exec install-exec-am \
	install-info install-info-am install-libLTLIBRARIES \
	install-libjosua_la_includeHEADERS install-man install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-info-am uninstall-libLTLIBRARIES \
	uninstall-libjosua_la_includeHEADERS

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
